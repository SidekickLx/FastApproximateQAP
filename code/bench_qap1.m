function [times,errors,iters]=bench_qap(ns)
% Benchmark the QAP with random digraph data.
%function [times,errors,iters]=bench_qap(ns)
% Input is ns, a vector of digraph sizes.  Each digraph is ER with p=log(n)/n.
% The isomorphoric "challenge" digraph is generated by randomly permuted the generated
% random digraph.  Then sfw a Frank-Wolf algorithm )FW) for QAP is invoked
% allowing up to 30 interations to align the random graph to its permuted
% version.
% On return the run time is givne in the vector times,
% the number of edges in the permuted digraph that disagree between the FW
% solution in the vector errors and finally the number of iterations of FW
% performed is given in iters.
% John M. Conroy
% September 9, 2011
% IDA Center for Computing Sciences
%  (c) 1996-2010, Institute for Defense Analyses, 4850 Mark Center Drive, Alexandria, Virginia, 22311-1882; 703-845-2500.
%
%     This material may be reproduced by or for the U.S. Government pursuant to the copyright license under the clauses at DFARS 252.227-7013 and 252.227-7014.
%
times=zeros(size(ns));
errors=times;
iters=errors;
for i=1:length(ns)
    % Generate a random digraph is Pr(i,j)=log(n)/n;
    p=log(ns(i))/ns(i);
    A=spones(sprand(ns(i),ns(i),p));
    q=randperm(ns(i));
    B=A;
    B(q,q)=B;
    tic;
    [~,myq,~,iters(i)]=sfw(A,-B,30);
    errors(i)=sum(myq~=q);
    times(i)=toc;
end

